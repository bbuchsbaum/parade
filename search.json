[{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"file provides guidance Claude Code (claude.ai/code) working code repository.","code":""},{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":"project-overview","dir":"","previous_headings":"","what":"Project Overview","title":"CLAUDE.md","text":"Parade R package declarative parallel dataflow processing built top future/furrr, specialized support HPC environments (particularly SLURM). package provides typed schemas, artifacts, diagnostics, HPC-friendly distribution capabilities.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":"build-and-install-package","dir":"","previous_headings":"Common Development Commands","what":"Build and Install Package","title":"CLAUDE.md","text":"","code":"# Build and install from source devtools::install()  # Build documentation devtools::document()  # Check package for CRAN compliance devtools::check()  # Run tests (if available) devtools::test()"},{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":"testing-single-functions","dir":"","previous_headings":"Common Development Commands","what":"Testing Single Functions","title":"CLAUDE.md","text":"","code":"# Load development version devtools::load_all()  # Test individual functions example_function()"},{"path":[]},{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":"core-components","dir":"","previous_headings":"Code Architecture","what":"Core Components","title":"CLAUDE.md","text":"JSON-based configuration system SLURM defaults profiles Configuration search precedence: PARADE_CONFIG env var → <project>/parade.json → <project>/.parade/parade.json NA/omit semantics resource management (NA values drop flags) Profile-based defaults session persistent storage options Generic script submission interface via submit_slurm() Integration batchtools registry management Automatic resource merging defaults Job handle persistence metadata tracking Live CPU/memory metrics via SLURM commands (squeue, sstat, sacct) Metric parsing formatting utilities Job status tracking log management script_top(): Single job interactive monitor jobs_top(): Multi-job dashboard live updates Log tailing status visualization Project-relative path resolution Registry artifact directory management","code":""},{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":"key-design-patterns","dir":"","previous_headings":"Code Architecture","what":"Key Design Patterns","title":"CLAUDE.md","text":"Null coalescing operator: %||% used throughout default values Error handling: Graceful degradation SLURM tools unavailable Registry pattern: batchtools registries job state persistence Resource merging: Hierarchical defaults explicit override semantics","code":""},{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":"dependencies","dir":"","previous_headings":"Code Architecture","what":"Dependencies","title":"CLAUDE.md","text":"Core dependencies: - future, furrr: Parallel processing backend - batchtools, future.batchtools: SLURM integration - tibble, tidyr, purrr: Data manipulation - jsonlite: Configuration persistence - digest: Hash generation unique IDs","code":""},{"path":"https://bbuchsbaum.github.io/parade/CLAUDE.html","id":"recent-changes-v0110","dir":"","previous_headings":"","what":"Recent Changes (v0.11.0)","title":"CLAUDE.md","text":"NA omit() values resources now explicitly drop SLURM flags Configurable defaults system JSON persistence Profile support different compute environments New jobs_top() multi-job monitoring dashboard Template path configuration via slurm_template_set()","code":""},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-core.html","id":"grid-flow","dir":"Articles","previous_headings":"","what":"1) Grid → Flow","title":"Parade core: declarative flows, types, and execution","text":"","code":"library(parade) library(progressr)  paths_init()                               # stable aliases (project://, artifacts://, registry://)  grid <- param_grid(subject = c(\"s01\",\"s02\"),                    session = 1:2,                    seed = 1:4)  fl <- flow(grid, seed_col = \"seed\") |>   stage(     id = \"prep\",     f  = function(subject, session) {       list(df = tibble::tibble(x = 1:5, y = (1:5) + session))     },     schema = schema(df = lst(ptype = tibble::tibble(x = int(), y = int()))),     hoist_struct = TRUE   ) |>   stage(     id = \"fit\",     needs = \"prep\",     f  = function(prep.df) {       list(mean_y = mean(prep.df$y))     },     schema = schema(mean_y = dbl())   )"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-core.html","id":"deterministic-types-contracts","dir":"Articles","previous_headings":"","what":"2) Deterministic types + contracts","title":"Parade core: declarative flows, types, and execution","text":"","code":"fl2 <- fl |>   stage(     id = \"check\",     needs = \"fit\",     f  = function(fit.mean_y) list(ok = is.finite(fit.mean_y)),     schema = schema(ok = lgl()),     ... = NULL   )"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-core.html","id":"execute-local-or-future","dir":"Articles","previous_headings":"","what":"3) Execute: local or future","title":"Parade core: declarative flows, types, and execution","text":"row returns typed fields; .diag .ok summarize per‑stage status.","code":"handlers(global = TRUE) out <- collect(fl2, engine = \"future\", workers = 4, .progress = TRUE) out"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-defaults.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"SLURM defaults & profiles (NA = omit)","text":"submit_slurm() merges call’s resources defaults, normalizes time, drops NA omit() fields constructing #SBATCH lines.","code":"library(parade) paths_init()  # Persist defaults to project .parade/parade.json slurm_defaults_set(   partition = \"general\",   time = \"2h\",   cpus_per_task = 16,   mem = NA,             # <- omit --mem entirely   omp_num_threads = 1,   persist = TRUE )  # Optionally set a default template path slurm_template_set(\"registry://templates/parade-slurm.tmpl\")  # Submit a script using defaults + NA-omit semantics job <- submit_slurm(\"script.R\")"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-defaults.html","id":"config-file-location","dir":"Articles","previous_headings":"","what":"Config file location","title":"SLURM defaults & profiles (NA = omit)","text":"PARADE_CONFIG env var (exact file), set <project>/parade.json, present <project>/.parade/parade.json (created needed) file JSON; example:","code":"{   \"slurm\": {     \"template\": \"registry://templates/parade-slurm.tmpl\",     \"defaults\": {       \"partition\": \"general\",       \"time\": \"2h\",       \"cpus_per_task\": 16,       \"mem\": null,       \"omp_num_threads\": 1     }   } }"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-defaults.html","id":"programmatic-use","dir":"Articles","previous_headings":"","what":"Programmatic use","title":"SLURM defaults & profiles (NA = omit)","text":"keeps R code portable across clusters different Slurm policies.","code":"# Build a resource list from defaults + overrides slurm_resources(list(time = \"90min\", mem = omit()))  # Inspect or change defaults in-session slurm_defaults_get() slurm_defaults_set(mem = NA)           # omit --mem slurm_defaults_set(time = \"1h\", persist = TRUE)  # and save"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-sinks.html","id":"define-a-sink","dir":"Articles","previous_headings":"","what":"1) Define a sink","title":"Artifacts: clean side-effects, atomic writes, and manifests","text":"","code":"sink <- sink_spec(   fields   = c(\"model\",\"metrics\"),   dir      = \"artifacts://fits\",   template = \"{.stage}/{subject}/{session}-{.row_key}\",   # or a function(row, stage, field) -> path   format   = \"rds\",   overwrite = \"skip\",           # \"overwrite\" or \"error\"   sidecar   = \"json\"            # writes sha256, bytes, clock, row key )"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-sinks.html","id":"use-it-in-a-stage","dir":"Articles","previous_headings":"","what":"2) Use it in a stage","title":"Artifacts: clean side-effects, atomic writes, and manifests","text":"collect() writes files atomically; row receives structured file refs (path, bytes, sha256, written, existed).","code":"fl <- flow(grid, seed_col = \"seed\") |>   stage(\"fit\",         f = function(subject, session) {           list(model = list(a = 1), metrics = tibble::tibble(acc = runif(1)))         },         schema = schema(model = artifact(), metrics = artifact()),         sink = sink)"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-sinks.html","id":"read-later","dir":"Articles","previous_headings":"","what":"3) Read later","title":"Artifacts: clean side-effects, atomic writes, and manifests","text":"","code":"# autoload=TRUE on the sink will transparently read RDS when used by downstream stages; # or read from the manifest: manifest(\"artifacts://fits\") |>   dplyr::arrange(desc(bytes)) |>   dplyr::slice_head(n = 10)"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-slurm-distribution.html","id":"row-wise-vs--barrier-groups","dir":"Articles","previous_headings":"","what":"Row-wise vs. barrier groups","title":"Distribution: local and SLURM (barriers, throttling, chunking)","text":"","code":"# Row-wise: one group per row fl_rowwise <- fl |> distribute(dist_slurm(by = NULL, within = \"multisession\", workers_within = 64,                                           resources = batch_resources(nodes=1, cpus_per_task=64, time=\"2h\"),                                           chunks_per_job = nrow(grid)))  # Barrier by subject (one job per subject) fl_subject <- fl |> distribute(dist_slurm(by = \"subject\", within = \"multisession\", workers_within = 8,                                           resources = batch_resources(nodes=1, cpus_per_task=8, time=\"2h\"),                                           chunks_per_job = 1))"},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-slurm-distribution.html","id":"throttling-like-xargs--p","dir":"Articles","previous_headings":"","what":"Throttling like xargs -P","title":"Distribution: local and SLURM (barriers, throttling, chunking)","text":"workers_within limits concurrent tasks inside job. Use chunks_per_job split groups multiple jobs (→ multiple nodes).","code":""},{"path":"https://bbuchsbaum.github.io/parade/articles/parade-slurm-distribution.html","id":"deferred-runs","dir":"Articles","previous_headings":"","what":"Deferred runs","title":"Distribution: local and SLURM (barriers, throttling, chunking)","text":"","code":"preflight(fl_rowwise) d <- submit(fl_rowwise, mode = \"index\") # returns immediately deferred_status(d, TRUE) # tail logs with scripts/parade_tail.R, or bind results: deferred_collect(d, how = \"index\")"},{"path":"https://bbuchsbaum.github.io/parade/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Parade Authors. Author, maintainer.","code":""},{"path":"https://bbuchsbaum.github.io/parade/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Authors P (2025). parade: Declarative Parallel Dataflow Future/Furrr. R package version 0.11.0, https://bbuchsbaum.github.io/parade/.","code":"@Manual{,   title = {parade: Declarative Parallel Dataflow with Future/Furrr},   author = {Parade Authors},   year = {2025},   note = {R package version 0.11.0},   url = {https://bbuchsbaum.github.io/parade/}, }"},{"path":"https://bbuchsbaum.github.io/parade/index.html","id":"parade-v0110--slurm-defaults-naomit--profiles--jobs_top","dir":"","previous_headings":"","what":"Declarative Parallel Dataflow with Future/Furrr","title":"Declarative Parallel Dataflow with Future/Furrr","text":"NA omit() drop resources: batch_resources() now removes NA/omit() values flags like --mem can intentionally omitted per site. Configurable defaults parade.json: slurm_defaults_set() / slurm_defaults_get() optional persistence; slurm_template_set() pin default template. Merged resources via slurm_resources(); submit_slurm() uses defaults automatically. jobs_top(): multi-job live dashboard alongside script_top(). Config search precedence: PARADE_CONFIG file → <project>/parade.json → <project>/.parade/parade.json.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/artifact.html","id":null,"dir":"Reference","previous_headings":"","what":"Alias for file_ref function — artifact","title":"Alias for file_ref function — artifact","text":"Alias file_ref function","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/artifact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alias for file_ref function — artifact","text":"","code":"artifact()"},{"path":"https://bbuchsbaum.github.io/parade/reference/artifact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alias for file_ref function — artifact","text":"File reference schema","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/batch_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of SLURM resources with friendly parsing — batch_resources","title":"Create a list of SLURM resources with friendly parsing — batch_resources","text":"Builds resource specification SLURM job submission convenient parsing time formats memory specifications. Handles common abbreviations normalizes values batchtools compatibility.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/batch_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of SLURM resources with friendly parsing — batch_resources","text":"","code":"batch_resources(   partition = NULL,   time = NULL,   nodes = NULL,   ntasks = NULL,   ntasks_per_node = NULL,   cpus_per_task = NULL,   ncpus = NULL,   mem = NULL,   account = NULL,   qos = NULL,   modules = NULL,   omp_num_threads = NULL )"},{"path":"https://bbuchsbaum.github.io/parade/reference/batch_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of SLURM resources with friendly parsing — batch_resources","text":"partition SLURM partition name time Time limit (accepts formats like '2h', '90min', 'H:MM:SS') nodes Number nodes required ntasks Number tasks ntasks_per_node Number tasks per node cpus_per_task CPUs per task ncpus Alias cpus_per_task mem Memory requirement (e.g., \"4GB\", \"1000MB\") account SLURM account charge qos Quality service level modules Environment modules load omp_num_threads OpenMP thread count","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/batch_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of SLURM resources with friendly parsing — batch_resources","text":"Named list suitable batchtools submitJobs resources","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/batch_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list of SLURM resources with friendly parsing — batch_resources","text":"","code":"batch_resources(time = \"2h\", mem = \"4GB\", cpus_per_task = 4) #> $time #> [1] \"2:00:00\" #>  #> $cpus_per_task #> [1] 4 #>  #> $mem #> [1] \"4GB\" #>  batch_resources(partition = \"gpu\", time = \"30min\") #> $partition #> [1] \"gpu\" #>  #> $time #> [1] \"0:30:00\" #>"},{"path":"https://bbuchsbaum.github.io/parade/reference/chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a character type specification — chr","title":"Create a character type specification — chr","text":"Create character type specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a character type specification — chr","text":"","code":"chr()"},{"path":"https://bbuchsbaum.github.io/parade/reference/chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a character type specification — chr","text":"character vector prototype schema definitions","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a character type specification — chr","text":"","code":"schema(name = chr()) #> # A tibble: 0 × 1 #> # ℹ 1 variable: name <chr>"},{"path":"https://bbuchsbaum.github.io/parade/reference/collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a parade flow and collect results — collect","title":"Execute a parade flow and collect results — collect","text":"Runs stages flow, handling dependencies parallelization according flow's distribution settings. Returns tibble results stages.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a parade flow and collect results — collect","text":"","code":"collect(   fl,   engine = c(\"future\", \"sequential\"),   workers = NULL,   scheduling = 1,   seed_furrr = TRUE,   .progress = interactive(),   limit = NULL )"},{"path":"https://bbuchsbaum.github.io/parade/reference/collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a parade flow and collect results — collect","text":"fl parade_flow object stages execute engine Execution engine: \"future\" (default) \"sequential\" workers Number workers parallel execution scheduling Furrr scheduling parameter (0 < value <= 1 chunk size) seed_furrr Whether enable deterministic random number generation .progress Whether display progress bars (default: interactive()) limit Optional limit number grid rows process","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a parade flow and collect results — collect","text":"tibble containing results executed stages","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/collect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a parade flow and collect results — collect","text":"","code":"# \\donttest{ grid <- data.frame(x = 1:3) fl <- flow(grid) |>   stage(\"double\", function(x) x * 2, schema = returns(result = dbl())) results <- collect(fl) # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/contract.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a validation contract for stage outputs — contract","title":"Define a validation contract for stage outputs — contract","text":"Define validation contract stage outputs","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/contract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a validation contract for stage outputs — contract","text":"","code":"contract(...)"},{"path":"https://bbuchsbaum.github.io/parade/reference/contract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a validation contract for stage outputs — contract","text":"... Named field specifications validation","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/contract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a validation contract for stage outputs — contract","text":"parade_contract object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/contract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a validation contract for stage outputs — contract","text":"","code":"my_contract <- contract(result = ctr_field(\"result\", min = 0))"},{"path":"https://bbuchsbaum.github.io/parade/reference/ctr_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a contract field specification — ctr_field","title":"Define a contract field specification — ctr_field","text":"Define contract field specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/ctr_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a contract field specification — ctr_field","text":"","code":"ctr_field(   name,   class = NULL,   length = 1L,   predicate = NULL,   min = NULL,   max = NULL,   choices = NULL,   allow_na = TRUE,   allow_null = FALSE )"},{"path":"https://bbuchsbaum.github.io/parade/reference/ctr_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a contract field specification — ctr_field","text":"name Field name validate class Expected class(es) field length Expected length (default 1) predicate Custom validation function min Minimum allowed value (numeric fields) max Maximum allowed value (numeric fields) choices Valid choices (categorical fields) allow_na Whether NA values allowed allow_null Whether NULL values allowed","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/ctr_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a contract field specification — ctr_field","text":"parade_ctr_field object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/ctr_field.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a contract field specification — ctr_field","text":"","code":"ctr_field(\"score\", class = \"numeric\", min = 0, max = 100) #> $name #> [1] \"score\" #>  #> $class #> [1] \"numeric\" #>  #> $length #> [1] 1 #>  #> $predicate #> NULL #>  #> $min #> [1] 0 #>  #> $max #> [1] 100 #>  #> $choices #> NULL #>  #> $allow_na #> [1] TRUE #>  #> $allow_null #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"parade_ctr_field\""},{"path":"https://bbuchsbaum.github.io/parade/reference/dbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a double/numeric type specification — dbl","title":"Create a double/numeric type specification — dbl","text":"Create double/numeric type specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a double/numeric type specification — dbl","text":"","code":"dbl()"},{"path":"https://bbuchsbaum.github.io/parade/reference/dbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a double/numeric type specification — dbl","text":"double vector prototype schema definitions","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a double/numeric type specification — dbl","text":"","code":"schema(result = dbl()) #> # A tibble: 0 × 1 #> # ℹ 1 variable: result <dbl>"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_await.html","id":null,"dir":"Reference","previous_headings":"","what":"Wait for deferred execution to complete — deferred_await","title":"Wait for deferred execution to complete — deferred_await","text":"Wait deferred execution complete","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_await.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wait for deferred execution to complete — deferred_await","text":"","code":"deferred_await(d, timeout = Inf, poll = 10)"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_await.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wait for deferred execution to complete — deferred_await","text":"d parade_deferred object timeout Maximum time wait seconds poll Polling interval seconds","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_await.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wait for deferred execution to complete — deferred_await","text":"input deferred object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_await.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wait for deferred execution to complete — deferred_await","text":"","code":"# \\donttest{ deferred <- submit(fl) #> Error: object 'fl' not found deferred_await(deferred, timeout = 600) #> Error: object 'deferred' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_cancel.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel deferred execution jobs — deferred_cancel","title":"Cancel deferred execution jobs — deferred_cancel","text":"Cancel deferred execution jobs","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_cancel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel deferred execution jobs — deferred_cancel","text":"","code":"deferred_cancel(d, which = c(\"running\", \"all\"))"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_cancel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel deferred execution jobs — deferred_cancel","text":"d parade_deferred object jobs cancel: \"running\" \"\"","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_cancel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cancel deferred execution jobs — deferred_cancel","text":"input deferred object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_cancel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel deferred execution jobs — deferred_cancel","text":"","code":"# \\donttest{ deferred <- submit(fl) #> Error: object 'fl' not found deferred_cancel(deferred, which = \"running\") #> Error: object 'deferred' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect results from deferred execution — deferred_collect","title":"Collect results from deferred execution — deferred_collect","text":"Collect results deferred execution","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect results from deferred execution — deferred_collect","text":"","code":"deferred_collect(d, how = c(\"auto\", \"index\", \"results\"))"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect results from deferred execution — deferred_collect","text":"d parade_deferred object collect results: \"auto\", \"index\", \"results\"","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect results from deferred execution — deferred_collect","text":"tibble collected results","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_collect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect results from deferred execution — deferred_collect","text":"","code":"# \\donttest{ deferred <- submit(fl) #> Error: object 'fl' not found deferred_await(deferred) #> Error: object 'deferred' not found results <- deferred_collect(deferred) #> Error: object 'deferred' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get status of a deferred execution — deferred_status","title":"Get status of a deferred execution — deferred_status","text":"Get status deferred execution","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get status of a deferred execution — deferred_status","text":"","code":"deferred_status(d, detail = FALSE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get status of a deferred execution — deferred_status","text":"d parade_deferred object detail Whether return detailed status information","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get status of a deferred execution — deferred_status","text":"tibble execution status","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/deferred_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get status of a deferred execution — deferred_status","text":"","code":"# \\donttest{ deferred <- submit(fl) #> Error: object 'fl' not found status <- deferred_status(deferred) #> Error: object 'deferred' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract diagnostic information from flow results — diagnostics","title":"Extract diagnostic information from flow results — diagnostics","text":"Extracts formats diagnostic information completed flow execution results, showing success/failure status stage.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract diagnostic information from flow results — diagnostics","text":"","code":"diagnostics(out, stage = NULL)"},{"path":"https://bbuchsbaum.github.io/parade/reference/diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract diagnostic information from flow results — diagnostics","text":"Results tibble collect() similar stage Optional stage name filter results","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract diagnostic information from flow results — diagnostics","text":"Tibble diagnostic information","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/diagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract diagnostic information from flow results — diagnostics","text":"","code":"# \\donttest{ # results <- collect(flow) # diag <- diagnostics(results) # stage_diag <- diagnostics(results, stage = \"process\") # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Create local distribution specification — dist_local","title":"Create local distribution specification — dist_local","text":"Configure local parallel execution using future framework.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create local distribution specification — dist_local","text":"","code":"dist_local(   by = NULL,   within = c(\"multisession\", \"sequential\"),   workers_within = NULL,   chunks_per_job = 1L )"},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create local distribution specification — dist_local","text":"Column names group parallelization within Execution strategy: \"multisession\" \"sequential\" workers_within Number workers within job chunks_per_job Number groups process per job","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create local distribution specification — dist_local","text":"parade_dist object local execution","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_local.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create local distribution specification — dist_local","text":"","code":"dist_local(by = \"group\", within = \"multisession\") #> $backend #> [1] \"local\" #>  #> $by #> [1] \"group\" #>  #> $within #> [1] \"multisession\" #>  #> $workers_within #> NULL #>  #> $chunks_per_job #> [1] 1 #>  #> $slurm #> NULL #>  #> attr(,\"class\") #> [1] \"parade_dist\" dist_local(chunks_per_job = 2L) #> $backend #> [1] \"local\" #>  #> $by #> character(0) #>  #> $within #> [1] \"multisession\" #>  #> $workers_within #> NULL #>  #> $chunks_per_job #> [1] 2 #>  #> $slurm #> NULL #>  #> attr(,\"class\") #> [1] \"parade_dist\""},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_slurm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SLURM distribution specification — dist_slurm","title":"Create SLURM distribution specification — dist_slurm","text":"Configure distributed execution SLURM clusters using batchtools.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_slurm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SLURM distribution specification — dist_slurm","text":"","code":"dist_slurm(   by = NULL,   within = c(\"multisession\", \"sequential\"),   workers_within = NULL,   template = slurm_template(),   resources = list(),   chunks_per_job = 1L )"},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_slurm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SLURM distribution specification — dist_slurm","text":"Column names group parallelization within Execution strategy within SLURM job workers_within Number workers within SLURM job template Path SLURM batch template file resources Named list SLURM resource specifications chunks_per_job Number groups process per SLURM job","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_slurm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SLURM distribution specification — dist_slurm","text":"parade_dist object SLURM execution","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dist_slurm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create SLURM distribution specification — dist_slurm","text":"","code":"# \\donttest{ dist_slurm(by = \"condition\", resources = list(time = \"1h\", mem = \"4GB\")) #> $backend #> [1] \"slurm\" #>  #> $by #> [1] \"condition\" #>  #> $within #> [1] \"multisession\" #>  #> $workers_within #> NULL #>  #> $chunks_per_job #> [1] 1 #>  #> $slurm #> $slurm$template #> [1] \"/home/runner/work/_temp/Library/parade/batchtools/parade-slurm.tmpl\" #>  #> $slurm$resources #> $slurm$resources$time #> [1] \"1h\" #>  #> $slurm$resources$mem #> [1] \"4GB\" #>  #>  #>  #> attr(,\"class\") #> [1] \"parade_dist\" # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/distribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Add distribution settings to a parade flow — distribute","title":"Add distribution settings to a parade flow — distribute","text":"Add distribution settings parade flow","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/distribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add distribution settings to a parade flow — distribute","text":"","code":"distribute(fl, dist)"},{"path":"https://bbuchsbaum.github.io/parade/reference/distribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add distribution settings to a parade flow — distribute","text":"fl parade_flow object dist distribution specification dist_local() dist_slurm()","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/distribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add distribution settings to a parade flow — distribute","text":"input flow distribution settings applied","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/distribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add distribution settings to a parade flow — distribute","text":"","code":"grid <- data.frame(x = 1:4, group = rep(c(\"A\", \"B\"), 2)) fl <- flow(grid) |> distribute(dist_local(by = \"group\"))"},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-parse_sacct_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse sacct output — .parse_sacct_output","title":"Parse sacct output — .parse_sacct_output","text":"Parse sacct output","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-parse_sacct_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse sacct output — .parse_sacct_output","text":"","code":".parse_sacct_output(output, job_id)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-parse_squeue_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse squeue output — .parse_squeue_output","title":"Parse squeue output — .parse_squeue_output","text":"Parse squeue output","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-parse_squeue_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse squeue output — .parse_squeue_output","text":"","code":".parse_squeue_output(output)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-parse_sstat_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse sstat output — .parse_sstat_output","title":"Parse sstat output — .parse_sstat_output","text":"Parse sstat output","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-parse_sstat_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse sstat output — .parse_sstat_output","text":"","code":".parse_sstat_output(output)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_exec.html","id":null,"dir":"Reference","previous_headings":"","what":"Execution hook for testing — .slurm_exec","title":"Execution hook for testing — .slurm_exec","text":"Execution hook testing","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_exec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execution hook for testing — .slurm_exec","text":"","code":".slurm_exec(cmd, args)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_sacct_info_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Refactored sacct info with injectable executor — .slurm_sacct_info_v2","title":"Refactored sacct info with injectable executor — .slurm_sacct_info_v2","text":"Refactored sacct info injectable executor","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_sacct_info_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refactored sacct info with injectable executor — .slurm_sacct_info_v2","text":"","code":".slurm_sacct_info_v2(job_id, exec = .slurm_exec)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_squeue_info_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Refactored squeue info with injectable executor — .slurm_squeue_info_v2","title":"Refactored squeue info with injectable executor — .slurm_squeue_info_v2","text":"Refactored squeue info injectable executor","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_squeue_info_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refactored squeue info with injectable executor — .slurm_squeue_info_v2","text":"","code":".slurm_squeue_info_v2(job_id, exec = .slurm_exec)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_sstat_info_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Refactored sstat info with injectable executor — .slurm_sstat_info_v2","title":"Refactored sstat info with injectable executor — .slurm_sstat_info_v2","text":"Refactored sstat info injectable executor","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dot-slurm_sstat_info_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refactored sstat info with injectable executor — .slurm_sstat_info_v2","text":"","code":".slurm_sstat_info_v2(job_id, exec = .slurm_exec)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dry_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Dry-run a flow: show plan and counts without executing — dry_run","title":"Dry-run a flow: show plan and counts without executing — dry_run","text":"Dry-run flow: show plan counts without executing","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/dry_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dry-run a flow: show plan and counts without executing — dry_run","text":"","code":"dry_run(fl)"},{"path":"https://bbuchsbaum.github.io/parade/reference/dry_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dry-run a flow: show plan and counts without executing — dry_run","text":"fl flow().","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/explain.html","id":null,"dir":"Reference","previous_headings":"","what":"Explain a flow: DAG + distribution + sinks — explain","title":"Explain a flow: DAG + distribution + sinks — explain","text":"Explain flow: DAG + distribution + sinks","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/explain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explain a flow: DAG + distribution + sinks — explain","text":"","code":"explain(fl)"},{"path":"https://bbuchsbaum.github.io/parade/reference/explain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explain a flow: DAG + distribution + sinks — explain","text":"fl flow().","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/explain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explain a flow: DAG + distribution + sinks — explain","text":"tibble summarizing stages.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/failed.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract failed rows from flow results — failed","title":"Extract failed rows from flow results — failed","text":"Returns rows execution failed, either overall specific stage.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/failed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract failed rows from flow results — failed","text":"","code":"failed(out, stage = NULL)"},{"path":"https://bbuchsbaum.github.io/parade/reference/failed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract failed rows from flow results — failed","text":"Results tibble flow execution stage Optional stage name check failures","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/failed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract failed rows from flow results — failed","text":"Tibble containing failed rows","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/failed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract failed rows from flow results — failed","text":"","code":"# \\donttest{ # results <- collect(flow) # failures <- failed(results) # stage_failures <- failed(results, stage = \"validation\") # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/file_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a file reference type specification — file_ref","title":"Create a file reference type specification — file_ref","text":"Create file reference type specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/file_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a file reference type specification — file_ref","text":"","code":"file_ref()"},{"path":"https://bbuchsbaum.github.io/parade/reference/file_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a file reference type specification — file_ref","text":"packed schema file reference metadata","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/file_ref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a file reference type specification — file_ref","text":"","code":"file_schema <- returns(output = file_ref())"},{"path":"https://bbuchsbaum.github.io/parade/reference/flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parade flow for declarative data processing — flow","title":"Create a parade flow for declarative data processing — flow","text":"flow defines computational pipeline typed stages operate parameter grid. stage can depend previous stages produce typed outputs optional error handling policies.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parade flow for declarative data processing — flow","text":"","code":"flow(grid, seed_col = NULL, error = c(\"propagate\", \"keep\", \"omit\", \"stop\"))"},{"path":"https://bbuchsbaum.github.io/parade/reference/flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parade flow for declarative data processing — flow","text":"grid data frame tibble containing parameter combinations seed_col Optional column name reproducible random seeds error Error handling policy: \"propagate\" (default), \"keep\", \"omit\", \"stop\"","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/flow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parade flow for declarative data processing — flow","text":"parade_flow object containing grid, stages, options","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/flow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a parade flow for declarative data processing — flow","text":"","code":"# Create a simple flow grid <- data.frame(x = 1:3, y = letters[1:3]) fl <- flow(grid) print(fl) #> <parade_flow> #>   Grid rows : 3 #>   Stages    : 0 [] #>   Error     : propagate  # Flow with seed column for reproducibility fl_seed <- flow(grid, seed_col = \"x\")"},{"path":"https://bbuchsbaum.github.io/parade/reference/grapes-or-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Null-coalescing operator — %||%","title":"Null-coalescing operator — %||%","text":"Null-coalescing operator","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/grapes-or-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Null-coalescing operator — %||%","text":"","code":"x %||% y"},{"path":"https://bbuchsbaum.github.io/parade/reference/int.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an integer type specification — int","title":"Create an integer type specification — int","text":"Create integer type specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an integer type specification — int","text":"","code":"int()"},{"path":"https://bbuchsbaum.github.io/parade/reference/int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an integer type specification — int","text":"integer vector prototype schema definitions","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an integer type specification — int","text":"","code":"schema(count = int()) #> # A tibble: 0 × 1 #> # ℹ 1 variable: count <int>"},{"path":"https://bbuchsbaum.github.io/parade/reference/jobs_top.html","id":null,"dir":"Reference","previous_headings":"","what":"Live dashboard for multiple SLURM jobs — jobs_top","title":"Live dashboard for multiple SLURM jobs — jobs_top","text":"Interactive text dashboard showing status, resource usage, logs multiple SLURM jobs simultaneously.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/jobs_top.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Live dashboard for multiple SLURM jobs — jobs_top","text":"","code":"jobs_top(jobs, refresh = 3, nlog = 20, clear = TRUE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/jobs_top.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Live dashboard for multiple SLURM jobs — jobs_top","text":"jobs List parade_script_job objects, data frame, registry paths refresh Refresh interval seconds nlog Number log lines show running job clear Whether clear screen updates","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/jobs_top.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Live dashboard for multiple SLURM jobs — jobs_top","text":"input jobs object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/jobs_top.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Live dashboard for multiple SLURM jobs — jobs_top","text":"","code":"# \\donttest{ job1 <- submit_slurm(\"script1.R\") #> Error in submit_slurm(\"script1.R\"): Script not found: script1.R job2 <- submit_slurm(\"script2.R\") #> Error in submit_slurm(\"script2.R\"): Script not found: script2.R jobs_top(list(job1, job2)) #> Error: object 'job1' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/lgl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a logical type specification — lgl","title":"Create a logical type specification — lgl","text":"Create logical type specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/lgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a logical type specification — lgl","text":"","code":"lgl()"},{"path":"https://bbuchsbaum.github.io/parade/reference/lgl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a logical type specification — lgl","text":"logical vector prototype schema definitions","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/lgl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a logical type specification — lgl","text":"","code":"schema(is_valid = lgl()) #> # A tibble: 0 × 1 #> # ℹ 1 variable: is_valid <lgl>"},{"path":"https://bbuchsbaum.github.io/parade/reference/lst.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list type specification — lst","title":"Create a list type specification — lst","text":"Create list type specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/lst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list type specification — lst","text":"","code":"lst(ptype = list())"},{"path":"https://bbuchsbaum.github.io/parade/reference/lst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list type specification — lst","text":"ptype Prototype list elements","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/lst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list type specification — lst","text":"list_of vector prototype schema definitions","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/lst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list type specification — lst","text":"","code":"schema(items = lst()) #> # A tibble: 0 × 1 #> # ℹ 1 variable: items <list<list>>"},{"path":"https://bbuchsbaum.github.io/parade/reference/manifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create artifact manifest from sidecar files — manifest","title":"Create artifact manifest from sidecar files — manifest","text":"Scans directory tree JSON sidecar files combines manifest artifacts.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/manifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create artifact manifest from sidecar files — manifest","text":"","code":"manifest(root)"},{"path":"https://bbuchsbaum.github.io/parade/reference/manifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create artifact manifest from sidecar files — manifest","text":"root Root directory scan artifacts","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/manifest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create artifact manifest from sidecar files — manifest","text":"Tibble artifact metadata","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/manifest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create artifact manifest from sidecar files — manifest","text":"","code":"manifest_data <- manifest(\"artifacts://results\")"},{"path":"https://bbuchsbaum.github.io/parade/reference/pack.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack a schema into a structured type — pack","title":"Pack a schema into a structured type — pack","text":"Pack schema structured type","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/pack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack a schema into a structured type — pack","text":"","code":"pack(.returns)"},{"path":"https://bbuchsbaum.github.io/parade/reference/pack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pack a schema into a structured type — pack","text":".returns schema specification returns()","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/pack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pack a schema into a structured type — pack","text":"parade_pack object nested data structures","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/pack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pack a schema into a structured type — pack","text":"","code":"nested_schema <- pack(returns(x = dbl(), y = chr()))"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade.html","id":null,"dir":"Reference","previous_headings":"","what":"Declarative parallel dataflow with Future/Furrr and SLURM utilities — parade","title":"Declarative parallel dataflow with Future/Furrr and SLURM utilities — parade","text":"parade package provides declarative, lazy, compositional approach parallel dataflow R. Built top future/furrr ecosystem, offers typed schemas, artifact management, diagnostics, HPC-friendly distribution including seamless SLURM integration via future.batchtools.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Declarative parallel dataflow with Future/Furrr and SLURM utilities — parade","text":"Key features include: Typed dataflow pipelines dependency management Local SLURM distributed execution Artifact persistence automatic metadata Real-time job monitoring dashboards Configurable resource management profiles Comprehensive error handling diagnostics","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/parade/reference/parade.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Declarative parallel dataflow with Future/Furrr and SLURM utilities — parade","text":"Maintainer: Parade Authors parade@example.org","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate the parade configuration file — parade_config_path","title":"Locate the parade configuration file — parade_config_path","text":"Finds appropriate location parade configuration file, checking environment variables standard locations.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate the parade configuration file — parade_config_path","text":"","code":"parade_config_path(create_dirs = TRUE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate the parade configuration file — parade_config_path","text":"create_dirs Whether create directories needed","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate the parade configuration file — parade_config_path","text":"Path configuration file","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate the parade configuration file — parade_config_path","text":"","code":"config_path <- parade_config_path() #> Error in dir.create(p, recursive = TRUE, showWarnings = FALSE): invalid 'path' argument"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read parade configuration — parade_config_read","title":"Read parade configuration — parade_config_read","text":"Read parade configuration","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read parade configuration — parade_config_read","text":"","code":"parade_config_read(path = NULL)"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read parade configuration — parade_config_read","text":"path Optional path config file (uses default NULL)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read parade configuration — parade_config_read","text":"List containing configuration settings","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read parade configuration — parade_config_read","text":"","code":"config <- parade_config_read() #> Error in dir.create(p, recursive = TRUE, showWarnings = FALSE): invalid 'path' argument"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write parade configuration — parade_config_write","title":"Write parade configuration — parade_config_write","text":"Write parade configuration","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write parade configuration — parade_config_write","text":"","code":"parade_config_write(cfg, path = NULL)"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write parade configuration — parade_config_write","text":"cfg Configuration list write path Optional path config file (uses default NULL)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write parade configuration — parade_config_write","text":"Path written config file (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_config_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write parade configuration — parade_config_write","text":"","code":"cfg <- list(slurm = list(defaults = list(time = \"1h\"))) parade_config_write(cfg) #> Error in dir.create(p, recursive = TRUE, showWarnings = FALSE): invalid 'path' argument"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Global parade options (get/set) — parade_options","title":"Global parade options (get/set) — parade_options","text":"Set per session control defaults collect() / submit().","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global parade options (get/set) — parade_options","text":"","code":"parade_options(   error = NULL,   scheduling = NULL,   seed_furrr = NULL,   progress = NULL )"},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global parade options (get/set) — parade_options","text":"error Default error policy: 'propagate', 'keep', 'omit', 'stop'. scheduling Furrr scheduling (0 < scheduling <= 1 integer chunk size). seed_furrr Set furrr's deterministic RNG (TRUE/FALSE). progress Default logical progress bars (progressr).","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/parade_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global parade options (get/set) — parade_options","text":"named list current options (invisibly).","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/param_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter grid using tidyr::crossing — param_grid","title":"Create a parameter grid using tidyr::crossing — param_grid","text":"Create parameter grid using tidyr::crossing","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/param_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter grid using tidyr::crossing — param_grid","text":"","code":"param_grid(...)"},{"path":"https://bbuchsbaum.github.io/parade/reference/param_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter grid using tidyr::crossing — param_grid","text":"... Named vectors lists cross","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/param_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameter grid using tidyr::crossing — param_grid","text":"tibble parameter combinations","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/param_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a parameter grid using tidyr::crossing — param_grid","text":"","code":"grid <- param_grid(x = 1:3, method = c(\"A\", \"B\"))"},{"path":"https://bbuchsbaum.github.io/parade/reference/path_here.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve a path using configured aliases — path_here","title":"Resolve a path using configured aliases — path_here","text":"Resolve path using configured aliases","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/path_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve a path using configured aliases — path_here","text":"","code":"path_here(alias, ..., create = TRUE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/path_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve a path using configured aliases — path_here","text":"alias Path alias (\"project\", \"data\", \"artifacts\", etc.) ... Additional path components append create Whether create directory exist","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/path_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve a path using configured aliases — path_here","text":"Resolved absolute path","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/path_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve a path using configured aliases — path_here","text":"","code":"path_here(\"data\", \"input\", \"file.csv\") #> [1] \"/home/runner/work/parade/parade/docs/reference/data/input/file.csv\" path_here(\"artifacts\", create = FALSE) #> character(0)"},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current parade path configuration — paths_get","title":"Get current parade path configuration — paths_get","text":"Get current parade path configuration","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current parade path configuration — paths_get","text":"","code":"paths_get()"},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current parade path configuration — paths_get","text":"Named list configured paths","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current parade path configuration — paths_get","text":"","code":"paths <- paths_get() paths$data #> [1] \"/home/runner/work/parade/parade/docs/reference/data\""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize parade path configuration — paths_init","title":"Initialize parade path configuration — paths_init","text":"Sets standard directory paths parade projects, automatically detecting HPC environments configuring appropriate scratch data directories.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize parade path configuration — paths_init","text":"","code":"paths_init(profile = c(\"auto\", \"local\", \"hpc\"), quiet = FALSE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize parade path configuration — paths_init","text":"profile Path profile: \"auto\" (default), \"local\", \"hpc\" quiet Whether suppress initialization messages","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize parade path configuration — paths_init","text":"Named list configured paths (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize parade path configuration — paths_init","text":"","code":"paths_init(profile = \"local\") #> parade paths: project=/home/runner/work/parade/parade/docs/reference; scratch=/tmp/RtmpATrimZ; data=/home/runner/work/parade/parade/docs/reference/data; artifacts=/tmp/RtmpATrimZ/parade-artifacts; registry=/tmp/RtmpATrimZ/parade-registry; config=/home/runner/work/parade/parade/docs/reference/.parade; cache=/home/runner/.cache/R/parade paths_init(quiet = TRUE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set specific parade paths — paths_set","title":"Set specific parade paths — paths_set","text":"Set specific parade paths","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set specific parade paths — paths_set","text":"","code":"paths_set(...)"},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set specific parade paths — paths_set","text":"... Named path specifications update","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set specific parade paths — paths_set","text":"Updated paths list (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/paths_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set specific parade paths — paths_set","text":"","code":"paths_set(data = \"/custom/data\", artifacts = \"/tmp/artifacts\")"},{"path":"https://bbuchsbaum.github.io/parade/reference/pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parade pipeline (alias for flow) — pipeline","title":"Create a parade pipeline (alias for flow) — pipeline","text":"Create parade pipeline (alias flow)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parade pipeline (alias for flow) — pipeline","text":"","code":"pipeline(grid, seed_col = NULL, error = c(\"propagate\", \"keep\", \"omit\", \"stop\"))"},{"path":"https://bbuchsbaum.github.io/parade/reference/pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parade pipeline (alias for flow) — pipeline","text":"grid data frame tibble containing parameter combinations seed_col Optional column name reproducible random seeds error Error handling policy: \"propagate\", \"keep\", \"omit\", \"stop\"","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parade pipeline (alias for flow) — pipeline","text":"parade_flow object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a parade pipeline (alias for flow) — pipeline","text":"","code":"grid <- data.frame(a = 1:2) pl <- pipeline(grid)"},{"path":"https://bbuchsbaum.github.io/parade/reference/preflight.html","id":null,"dir":"Reference","previous_headings":"","what":"Preflight checks for a flow — preflight","title":"Preflight checks for a flow — preflight","text":"Preflight checks flow","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/preflight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preflight checks for a flow — preflight","text":"","code":"preflight(fl)"},{"path":"https://bbuchsbaum.github.io/parade/reference/preflight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preflight checks for a flow — preflight","text":"fl flow().","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for parade flows — print.parade_flow","title":"Print method for parade flows — print.parade_flow","text":"Print method parade flows","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for parade flows — print.parade_flow","text":"","code":"# S3 method for class 'parade_flow' print(x, ...)"},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for parade flows — print.parade_flow","text":"x parade_flow object ... Additional arguments (ignored)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_flow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for parade flows — print.parade_flow","text":"input object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_script_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for parade script jobs — print.parade_script_job","title":"Print method for parade script jobs — print.parade_script_job","text":"Print method parade script jobs","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_script_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for parade script jobs — print.parade_script_job","text":"","code":"# S3 method for class 'parade_script_job' print(x, ...)"},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_script_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for parade script jobs — print.parade_script_job","text":"x parade_script_job object ... Additional arguments (ignored)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/print.parade_script_job.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for parade script jobs — print.parade_script_job","text":"input object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/resolve_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve paths with URI-style aliases — resolve_path","title":"Resolve paths with URI-style aliases — resolve_path","text":"Resolves path strings may contain URI-style aliases like \"data://input/file.csv\" \"artifacts://results\".","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/resolve_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve paths with URI-style aliases — resolve_path","text":"","code":"resolve_path(x, create = TRUE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/resolve_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve paths with URI-style aliases — resolve_path","text":"x Path string potentially containing aliases create Whether create directories needed","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/resolve_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve paths with URI-style aliases — resolve_path","text":"Resolved absolute path","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/resolve_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve paths with URI-style aliases — resolve_path","text":"","code":"resolve_path(\"data://processed/output.rds\") #> [1] \"/custom/data/processed/output.rds\" resolve_path(\"/absolute/path\") #> [1] \"/absolute/path\""},{"path":"https://bbuchsbaum.github.io/parade/reference/returns.html","id":null,"dir":"Reference","previous_headings":"","what":"Define expected return schema for a stage function — returns","title":"Define expected return schema for a stage function — returns","text":"Creates typed schema specification defines expected structure types data returned stage function.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/returns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define expected return schema for a stage function — returns","text":"","code":"returns(..., .contract = NULL)"},{"path":"https://bbuchsbaum.github.io/parade/reference/returns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define expected return schema for a stage function — returns","text":"... Named type specifications (e.g., result = dbl(), name = chr()) .contract Optional contract validation","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/returns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define expected return schema for a stage function — returns","text":"tibble prototype defining expected return structure","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/returns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define expected return schema for a stage function — returns","text":"","code":"returns(result = dbl(), status = chr()) #> # A tibble: 0 × 2 #> # ℹ 2 variables: result <dbl>, status <chr> returns(data = lst(), valid = lgl()) #> # A tibble: 0 × 2 #> # ℹ 2 variables: data <list<list>>, valid <lgl>"},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_batch_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a basic SLURM batch template — scaffold_batch_template","title":"Create a basic SLURM batch template — scaffold_batch_template","text":"Create basic SLURM batch template","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_batch_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a basic SLURM batch template — scaffold_batch_template","text":"","code":"scaffold_batch_template(   system = c(\"slurm\"),   out = file.path(\"batchtools\", paste0(\"parade-\", match.arg(system), \".tmpl\")),   modules = \"R\",   exports = c(PARADE_SCRATCH = \"${SLURM_TMPDIR:-${TMPDIR:-/tmp}}/parade-$SLURM_JOB_ID\",     OMP_NUM_THREADS = \"1\", MKL_NUM_THREADS = \"1\", OPENBLAS_NUM_THREADS = \"1\"),   preamble = character(),   overwrite = FALSE )"},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_batch_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a basic SLURM batch template — scaffold_batch_template","text":"path Path template created (temp file NULL)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_batch_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a basic SLURM batch template — scaffold_batch_template","text":"Path created template file (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_batch_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a basic SLURM batch template — scaffold_batch_template","text":"","code":"template_path <- scaffold_batch_template() #> Error in scaffold_batch_template(): File exists: /home/runner/work/parade/parade/docs/reference/batchtools/parade-slurm.tmpl (set overwrite=TRUE)."},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_flow_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate scaffold scripts for SLURM flow execution — scaffold_flow_job","title":"Generate scaffold scripts for SLURM flow execution — scaffold_flow_job","text":"Creates set helper scripts submitting, monitoring, collecting results parade flow SLURM systems.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_flow_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate scaffold scripts for SLURM flow execution — scaffold_flow_job","text":"","code":"scaffold_flow_job(   flow,   name = \"parade_job\",   registry_dir = NULL,   dir = getwd(),   modules = NULL,   exports = NULL )"},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_flow_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate scaffold scripts for SLURM flow execution — scaffold_flow_job","text":"flow parade_flow object name Base name generated scripts registry_dir Registry directory job execution dir Directory scripts created modules SLURM modules load exports Environment variables export","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_flow_job.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate scaffold scripts for SLURM flow execution — scaffold_flow_job","text":"List created script paths (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/scaffold_flow_job.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate scaffold scripts for SLURM flow execution — scaffold_flow_job","text":"","code":"# \\donttest{ flow <- flow(data.frame(x = 1:3)) scaffold_flow_job(flow, name = \"my_job\") #> Created scaffold scripts: #>   - /home/runner/work/parade/parade/docs/reference/scripts/my_job_submit.R #>   - /home/runner/work/parade/parade/docs/reference/scripts/my_job_sbatch.sh #>   - /home/runner/work/parade/parade/docs/reference/scripts/my_job_status.R #>   - /home/runner/work/parade/parade/docs/reference/scripts/my_job_collect.R #>   - /home/runner/work/parade/parade/docs/reference/scripts/my_job_cancel.sh # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Alias for returns function — schema","title":"Alias for returns function — schema","text":"Alias returns function","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alias for returns function — schema","text":"","code":"schema(..., .contract = NULL)"},{"path":"https://bbuchsbaum.github.io/parade/reference/schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alias for returns function — schema","text":"... Named type specifications .contract Optional contract validation","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alias for returns function — schema","text":"tibble prototype defining expected structure","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alias for returns function — schema","text":"","code":"schema(value = dbl(), label = chr()) #> # A tibble: 0 × 2 #> # ℹ 2 variables: value <dbl>, label <chr>"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_await.html","id":null,"dir":"Reference","previous_headings":"","what":"Wait for a SLURM script job to complete — script_await","title":"Wait for a SLURM script job to complete — script_await","text":"Wait SLURM script job complete","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_await.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wait for a SLURM script job to complete — script_await","text":"","code":"script_await(job, timeout = Inf, poll = 10)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_await.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wait for a SLURM script job to complete — script_await","text":"job parade_script_job object timeout Maximum time wait seconds (default: Inf) poll Polling interval seconds","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_await.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wait for a SLURM script job to complete — script_await","text":"input job object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_await.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wait for a SLURM script job to complete — script_await","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R script_await(job, timeout = 300)  # Wait up to 5 minutes #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_cancel.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel a running SLURM script job — script_cancel","title":"Cancel a running SLURM script job — script_cancel","text":"Cancel running SLURM script job","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_cancel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel a running SLURM script job — script_cancel","text":"","code":"script_cancel(job)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_cancel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel a running SLURM script job — script_cancel","text":"job parade_script_job object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_cancel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cancel a running SLURM script job — script_cancel","text":"input job object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_cancel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel a running SLURM script job — script_cancel","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R script_cancel(job) #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_done.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a SLURM job has completed — script_done","title":"Check if a SLURM job has completed — script_done","text":"Check SLURM job completed","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_done.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a SLURM job has completed — script_done","text":"","code":"script_done(job)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_done.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a SLURM job has completed — script_done","text":"job parade_script_job object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_done.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a SLURM job has completed — script_done","text":"Logical indicating completion status","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_done.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a SLURM job has completed — script_done","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R is_done <- script_done(job) #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_find_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the most recently created script job registries — script_find_latest","title":"Find the most recently created script job registries — script_find_latest","text":"Find recently created script job registries","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_find_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the most recently created script job registries — script_find_latest","text":"","code":"script_find_latest(n = 5, pattern = NULL)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_find_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the most recently created script job registries — script_find_latest","text":"n Maximum number registries return pattern Optional pattern filter registry names","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_find_latest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the most recently created script job registries — script_find_latest","text":"tibble registry paths modification times","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_find_latest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the most recently created script job registries — script_find_latest","text":"","code":"latest_jobs <- script_find_latest(n = 3)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a script job from its registry directory — script_load","title":"Load a script job from its registry directory — script_load","text":"Load script job registry directory","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a script job from its registry directory — script_load","text":"","code":"script_load(registry_dir)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a script job from its registry directory — script_load","text":"registry_dir Path batchtools registry directory","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a script job from its registry directory — script_load","text":"parade_script_job object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a script job from its registry directory — script_load","text":"","code":"# \\donttest{ job <- script_load(\"/path/to/registry\") #> Error in script_load(\"/path/to/registry\"): No script_job.rds found under: /path/to/registry # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get log file paths for a SLURM job — script_logs","title":"Get log file paths for a SLURM job — script_logs","text":"Get log file paths SLURM job","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get log file paths for a SLURM job — script_logs","text":"","code":"script_logs(job)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get log file paths for a SLURM job — script_logs","text":"job parade_script_job object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get log file paths for a SLURM job — script_logs","text":"Tibble log file paths modification times","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get log file paths for a SLURM job — script_logs","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R logs <- script_logs(job) #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CPU and memory metrics for a SLURM job — script_metrics","title":"Get CPU and memory metrics for a SLURM job — script_metrics","text":"Retrieves current resource usage statistics SLURM commands including CPU utilization, memory consumption, job status.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CPU and memory metrics for a SLURM job — script_metrics","text":"","code":"script_metrics(job)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CPU and memory metrics for a SLURM job — script_metrics","text":"job parade_script_job object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CPU and memory metrics for a SLURM job — script_metrics","text":"Named list job metrics resource usage","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CPU and memory metrics for a SLURM job — script_metrics","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R metrics <- script_metrics(job) #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get status of a SLURM script job — script_status","title":"Get status of a SLURM script job — script_status","text":"Get status SLURM script job","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get status of a SLURM script job — script_status","text":"","code":"script_status(job, detail = FALSE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get status of a SLURM script job — script_status","text":"job parade_script_job object detail Whether return detailed job information","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get status of a SLURM script job — script_status","text":"tibble job status information","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get status of a SLURM script job — script_status","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R status <- script_status(job) #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_tail.html","id":null,"dir":"Reference","previous_headings":"","what":"Display recent log output from a SLURM job — script_tail","title":"Display recent log output from a SLURM job — script_tail","text":"Display recent log output SLURM job","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_tail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display recent log output from a SLURM job — script_tail","text":"","code":"script_tail(job, n = 200)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_tail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display recent log output from a SLURM job — script_tail","text":"job parade_script_job object n Number lines show end log","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_tail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display recent log output from a SLURM job — script_tail","text":"Log lines (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_tail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display recent log output from a SLURM job — script_tail","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R script_tail(job, n = 50) #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_top.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive text monitor for a single SLURM job — script_top","title":"Interactive text monitor for a single SLURM job — script_top","text":"Displays real-time CPU, memory, log information running SLURM job continuously updating text interface.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_top.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive text monitor for a single SLURM job — script_top","text":"","code":"script_top(job, refresh = 2, nlog = 30, clear = TRUE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/script_top.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive text monitor for a single SLURM job — script_top","text":"job parade_script_job object refresh Refresh interval seconds nlog Number log lines display clear Whether clear screen updates","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_top.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive text monitor for a single SLURM job — script_top","text":"input job object (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/script_top.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive text monitor for a single SLURM job — script_top","text":"","code":"# \\donttest{ job <- submit_slurm(\"script.R\") #> Error in submit_slurm(\"script.R\"): Script not found: script.R script_top(job, refresh = 5) #> Error: object 'job' not found # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/sink_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sink specification for artifact persistence — sink_spec","title":"Create a sink specification for artifact persistence — sink_spec","text":"Defines stage outputs persisted disk, configurable directory structure, file formats, metadata handling.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/sink_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sink specification for artifact persistence — sink_spec","text":"","code":"sink_spec(   fields,   dir,   template = NULL,   format = c(\"rds\"),   writer = NULL,   overwrite = c(\"skip\", \"overwrite\", \"error\"),   checksum = TRUE,   sidecar = c(\"json\", \"none\"),   compress = \"gzip\",   reader = readRDS,   autoload = TRUE )"},{"path":"https://bbuchsbaum.github.io/parade/reference/sink_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sink specification for artifact persistence — sink_spec","text":"fields Character vector field names persist dir Base directory function artifact storage template Optional glue template file path generation format File format (currently \"rds\" supported) writer Optional custom writer function overwrite Overwrite policy: \"skip\", \"overwrite\", \"error\" checksum Whether compute SHA256 checksums sidecar Sidecar metadata format: \"json\" \"none\" compress Compression method RDS files reader Function read persisted files autoload Whether automatically load artifacts","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/sink_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sink specification for artifact persistence — sink_spec","text":"parade_sink specification object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/sink_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sink specification for artifact persistence — sink_spec","text":"","code":"sink_spec(\"result\", dir = \"artifacts://results\") #> $fields #> [1] \"result\" #>  #> $dir #> [1] \"artifacts://results\" #>  #> $template #> NULL #>  #> $format #> [1] \"rds\" #>  #> $writer #> NULL #>  #> $overwrite #> [1] \"skip\" #>  #> $checksum #> [1] TRUE #>  #> $sidecar #> [1] \"json\" #>  #> $compress #> [1] \"gzip\" #>  #> $reader #> function (file, refhook = NULL)  #> { #>     if (is.character(file)) { #>         con <- gzfile(file, \"rb\") #>         on.exit(close(con)) #>     } #>     else if (inherits(file, \"connection\"))  #>         con <- if (inherits(file, \"url\"))  #>             gzcon(file) #>         else file #>     else stop(\"bad 'file' argument\") #>     .Internal(unserializeFromConn(con, refhook)) #> } #> <bytecode: 0x5637856f0b30> #> <environment: namespace:base> #>  #> $autoload #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"parade_sink\" sink_spec(c(\"model\", \"metrics\"), dir = \"/tmp/output\", compress = \"xz\") #> $fields #> [1] \"model\"   \"metrics\" #>  #> $dir #> [1] \"/tmp/output\" #>  #> $template #> NULL #>  #> $format #> [1] \"rds\" #>  #> $writer #> NULL #>  #> $overwrite #> [1] \"skip\" #>  #> $checksum #> [1] TRUE #>  #> $sidecar #> [1] \"json\" #>  #> $compress #> [1] \"xz\" #>  #> $reader #> function (file, refhook = NULL)  #> { #>     if (is.character(file)) { #>         con <- gzfile(file, \"rb\") #>         on.exit(close(con)) #>     } #>     else if (inherits(file, \"connection\"))  #>         con <- if (inherits(file, \"url\"))  #>             gzcon(file) #>         else file #>     else stop(\"bad 'file' argument\") #>     .Internal(unserializeFromConn(con, refhook)) #> } #> <bytecode: 0x5637856f0b30> #> <environment: namespace:base> #>  #> $autoload #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"parade_sink\""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_defaults_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get defaults for SLURM (merged from options() and config) — slurm_defaults_get","title":"Get defaults for SLURM (merged from options() and config) — slurm_defaults_get","text":"Get defaults SLURM (merged options() config)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_defaults_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get defaults for SLURM (merged from options() and config) — slurm_defaults_get","text":"","code":"slurm_defaults_get(profile = \"default\")"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_defaults_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get defaults for SLURM (merged from options() and config) — slurm_defaults_get","text":"profile character name; 'default' default","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_defaults_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set defaults for SLURM (R session and optionally persist to config) — slurm_defaults_set","title":"Set defaults for SLURM (R session and optionally persist to config) — slurm_defaults_set","text":"Set defaults SLURM (R session optionally persist config)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_defaults_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set defaults for SLURM (R session and optionally persist to config) — slurm_defaults_set","text":"","code":"slurm_defaults_set(..., .list = NULL, profile = \"default\", persist = FALSE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_defaults_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set defaults for SLURM (R session and optionally persist to config) — slurm_defaults_set","text":"... key=value pairs (e.g., mem = NA, time = \"2h\") .list optional named list profile profile name; defaults 'default' persist write config file TRUE","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Build SLURM resources with defaults and normalization — slurm_resources","title":"Build SLURM resources with defaults and normalization — slurm_resources","text":"Merges user-specified resources configured defaults applies normalization batch_resources().","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build SLURM resources with defaults and normalization — slurm_resources","text":"","code":"slurm_resources(resources = NULL, profile = \"default\")"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build SLURM resources with defaults and normalization — slurm_resources","text":"resources Named list resource specifications merge profile Configuration profile use defaults","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build SLURM resources with defaults and normalization — slurm_resources","text":"Normalized resource specification list","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build SLURM resources with defaults and normalization — slurm_resources","text":"","code":"slurm_resources(list(time = \"2h\"), profile = \"default\") #> Error in dir.create(p, recursive = TRUE, showWarnings = FALSE): invalid 'path' argument"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to default SLURM template — slurm_template","title":"Get path to default SLURM template — slurm_template","text":"Get path default SLURM template","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to default SLURM template — slurm_template","text":"","code":"slurm_template()"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to default SLURM template — slurm_template","text":"Path package SLURM template file","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to default SLURM template — slurm_template","text":"","code":"template_path <- slurm_template()"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default SLURM template path — slurm_template_default","title":"Get the default SLURM template path — slurm_template_default","text":"Retrieves configured SLURM template path falls back package default template.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default SLURM template path — slurm_template_default","text":"","code":"slurm_template_default()"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default SLURM template path — slurm_template_default","text":"Path SLURM template file","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the default SLURM template path — slurm_template_default","text":"","code":"template_path <- slurm_template_default() #> Error in dir.create(p, recursive = TRUE, showWarnings = FALSE): invalid 'path' argument"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the default SLURM template path — slurm_template_set","title":"Set the default SLURM template path — slurm_template_set","text":"Set default SLURM template path","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the default SLURM template path — slurm_template_set","text":"","code":"slurm_template_set(path, persist = TRUE)"},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the default SLURM template path — slurm_template_set","text":"path Path SLURM template file persist Whether save configuration file","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the default SLURM template path — slurm_template_set","text":"Resolved template path (invisibly)","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/slurm_template_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the default SLURM template path — slurm_template_set","text":"","code":"# \\donttest{ slurm_template_set(\"/path/to/custom.tmpl\") #> Error in dir.create(p, recursive = TRUE, showWarnings = FALSE): invalid 'path' argument # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a processing stage to a parade flow — stage","title":"Add a processing stage to a parade flow — stage","text":"stage defines computational step flow typed inputs outputs, optional dependencies, configurable data handling options.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a processing stage to a parade flow — stage","text":"","code":"stage(   fl,   id,   f,   needs = character(),   schema,   prefix = TRUE,   sink = NULL,   skip_when = NULL,   hoist_struct = FALSE,   ... )"},{"path":"https://bbuchsbaum.github.io/parade/reference/stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a processing stage to a parade flow — stage","text":"fl parade_flow object id Unique stage identifier (character) f Function execute stage needs Character vector stage IDs stage depends schema Schema defining expected output structure (returns()) prefix Whether prefix output columns stage ID (logical) sink Optional sink specification artifact persistence skip_when Optional function determine skip stage hoist_struct Whether hoist nested data structures (logical) ... Additional constant arguments passed stage function","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a processing stage to a parade flow — stage","text":"input flow new stage added","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/stage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a processing stage to a parade flow — stage","text":"","code":"grid <- data.frame(x = 1:3) fl <- flow(grid) |>   stage(\"double\", function(x) x * 2, schema = returns(result = dbl()))"},{"path":"https://bbuchsbaum.github.io/parade/reference/struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Alias for pack function — struct","title":"Alias for pack function — struct","text":"Alias pack function","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alias for pack function — struct","text":"","code":"struct(.returns)"},{"path":"https://bbuchsbaum.github.io/parade/reference/struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alias for pack function — struct","text":".returns Schema specification","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alias for pack function — struct","text":"parade_pack object","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/submit.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit a flow for deferred execution — submit","title":"Submit a flow for deferred execution — submit","text":"Submits parade flow asynchronous execution, either locally using future SLURM using batchtools. Returns handle monitoring collecting results.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit a flow for deferred execution — submit","text":"","code":"submit(   fl,   mode = c(\"index\", \"results\"),   run_id = NULL,   registry_dir = NULL,   index_dir = NULL,   seed_furrr = TRUE,   scheduling = 1 )"},{"path":"https://bbuchsbaum.github.io/parade/reference/submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit a flow for deferred execution — submit","text":"fl parade_flow object distribution settings mode Execution mode: \"index\" (default) \"results\" run_id Optional run identifier (auto-generated NULL) registry_dir Directory execution registry index_dir Directory result indices seed_furrr Whether enable deterministic random number generation scheduling Furrr scheduling parameter","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/submit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit a flow for deferred execution — submit","text":"parade_deferred object monitoring execution","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/submit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submit a flow for deferred execution — submit","text":"","code":"# \\donttest{ grid <- data.frame(x = 1:4, group = rep(c(\"A\", \"B\"), 2)) fl <- flow(grid) |>   stage(\"calc\", function(x) x^2, schema = returns(result = dbl())) |>   distribute(dist_local(by = \"group\"))  deferred <- submit(fl) # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/submit_slurm.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit an R script to SLURM and monitor it from R — submit_slurm","title":"Submit an R script to SLURM and monitor it from R — submit_slurm","text":"Submits R script SLURM job using batchtools, configurable resources environment. Returns handle monitoring retrieving results.","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/submit_slurm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit an R script to SLURM and monitor it from R — submit_slurm","text":"","code":"submit_slurm(   script,   args = character(),   name = NULL,   template = NULL,   resources = NULL,   registry_dir = NULL,   env = character(),   lib_paths = .libPaths(),   rscript = file.path(R.home(\"bin\"), \"Rscript\"),   wd = dirname(normalizePath(script)) )"},{"path":"https://bbuchsbaum.github.io/parade/reference/submit_slurm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit an R script to SLURM and monitor it from R — submit_slurm","text":"script Path R script file execute args Character vector command line arguments pass script name Optional job name (defaults script basename) template Path SLURM template file (uses default NULL) resources Named list SLURM resource specifications registry_dir Directory batchtools registry (auto-generated NULL) env Named character vector environment variables set lib_paths Character vector library paths use rscript Path Rscript executable wd Working directory script execution","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/submit_slurm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit an R script to SLURM and monitor it from R — submit_slurm","text":"parade_script_job object monitoring job","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/submit_slurm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submit an R script to SLURM and monitor it from R — submit_slurm","text":"","code":"# \\donttest{ # Create a simple R script script_path <- tempfile(fileext = \".R\") writeLines(\"cat('Hello from SLURM!')\", script_path)  # Submit to SLURM job <- submit_slurm(script_path, resources = list(time = \"5min\")) #> Error in dir.create(p, recursive = TRUE, showWarnings = FALSE): invalid 'path' argument # }"},{"path":"https://bbuchsbaum.github.io/parade/reference/with_parade_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily set parade options for code execution — with_parade_options","title":"Temporarily set parade options for code execution — with_parade_options","text":"Temporarily set parade options code execution","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/with_parade_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily set parade options for code execution — with_parade_options","text":"","code":"with_parade_options(..., code)"},{"path":"https://bbuchsbaum.github.io/parade/reference/with_parade_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily set parade options for code execution — with_parade_options","text":"... Named parade option values set temporarily code Code execute modified options","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/with_parade_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporarily set parade options for code execution — with_parade_options","text":"Result executing code","code":""},{"path":"https://bbuchsbaum.github.io/parade/reference/with_parade_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporarily set parade options for code execution — with_parade_options","text":"","code":"with_parade_options(error = \"stop\", {   # code runs with error = \"stop\" }) #> Error in with_parade_options(error = \"stop\", {}): argument \"code\" is missing, with no default"}]
