% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/script_jobs.R
\name{submit_slurm}
\alias{submit_slurm}
\title{Submit an R script to SLURM or run locally}
\usage{
submit_slurm(
  script,
  args = character(),
  name = NULL,
  engine = c("slurm", "local"),
  template = NULL,
  resources = NULL,
  registry_dir = NULL,
  env = character(),
  lib_paths = .libPaths(),
  rscript = file.path(R.home("bin"), "Rscript"),
  wd = dirname(normalizePath(script)),
  .as_jobset = FALSE,
  .error_policy = NULL
)
}
\arguments{
\item{script}{Path to R script file to execute}

\item{args}{Character vector of command line arguments to pass to script}

\item{name}{Optional job name (defaults to script basename)}

\item{engine}{Execution engine: "slurm" or "local" (default: "slurm")}

\item{template}{Path to SLURM template file (uses default if NULL)}

\item{resources}{Named list of SLURM resource specifications (ignored for local)}

\item{registry_dir}{Directory for batchtools registry (auto-generated if NULL)}

\item{env}{Named character vector of environment variables to set}

\item{lib_paths}{Character vector of library paths to use}

\item{rscript}{Path to Rscript executable}

\item{wd}{Working directory for script execution}

\item{.as_jobset}{Logical indicating whether to return a single-element jobset
instead of a bare job object. Defaults to FALSE for backward compatibility.}

\item{.error_policy}{Error policy object for retry logic (from on_error())}
}
\value{
A \code{parade_script_job} or \code{parade_local_job} object for monitoring the job,
or a \code{parade_jobset} containing the job if \code{.as_jobset = TRUE}.
}
\description{
Submits an R script as a SLURM job using batchtools or runs it locally,
with configurable resources and environment. Returns a handle for monitoring
and retrieving results.
}
\examples{
# Create a simple R script
script_path <- tempfile(fileext = ".R")
writeLines("cat('Hello from parade!')", script_path)

# Run locally (no SLURM required)
job <- submit_slurm(script_path, engine = "local")

\donttest{
# Submit to SLURM (only if available)
if (Sys.which("squeue") != "") {
  job <- submit_slurm(script_path, resources = list(time = "5min"))
}
}
}
