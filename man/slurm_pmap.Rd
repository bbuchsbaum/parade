% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slurm_map.R
\name{slurm_pmap}
\alias{slurm_pmap}
\title{Parallel map over multiple lists/vectors via SLURM}
\usage{
slurm_pmap(
  .l,
  .f,
  ...,
  .name_by = "auto",
  .resources = NULL,
  .packages = character(),
  .write_result = NULL,
  .engine = c("slurm", "local"),
  .progress = FALSE
)
}
\arguments{
\item{.l}{List of vectors/lists to map over in parallel}

\item{.f}{Function to apply to each set of elements}

\item{...}{Additional static arguments passed to each call}

\item{.name_by}{Naming strategy}

\item{.resources}{Resource specification}

\item{.packages}{Packages to load}

\item{.write_result}{Path template for results}

\item{.engine}{Execution engine}

\item{.progress}{Show progress bar}
}
\value{
A \code{parade_jobset} object
}
\description{
Like \code{purrr::pmap}, submits jobs mapping a function over rows of
inputs provided as lists or data frames.
}
\examples{
# Local execution example (no SLURM required)
local_jobs <- slurm_pmap(
  list(x = 1:3, y = 4:6),
  function(x, y) x + y,
  .engine = "local"
)
results <- collect(local_jobs)

\donttest{
# Note: The following example requires a SLURM cluster environment
# Map over multiple arguments
files <- c("a.csv", "b.csv", "c.csv")
methods <- c("fast", "slow", "fast")
thresholds <- c(0.1, 0.2, 0.15)

jobs <- slurm_pmap(
  list(file = files, method = methods, threshold = thresholds),
  function(file, method, threshold) {
    process_file(file, method = method, threshold = threshold)
  },
  .name_by = function(...) paste0("proc-", tools::file_path_sans_ext(basename(..1)))
)
}

}
