% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collect.R
\name{collect}
\alias{collect}
\title{Execute a parade flow and collect results}
\usage{
collect(
  fl,
  engine = c("future", "sequential"),
  workers = NULL,
  scheduling = 1,
  seed_furrr = TRUE,
  .progress = interactive(),
  limit = NULL,
  validate = c("light", "full")
)
}
\arguments{
\item{fl}{A \code{parade_flow} object with stages to execute}

\item{engine}{Execution engine: "future" (default) or "sequential"}

\item{workers}{Number of workers for parallel execution}

\item{scheduling}{Furrr scheduling parameter (0 < value <= 1 or chunk size)}

\item{seed_furrr}{Whether to enable deterministic random number generation}

\item{.progress}{Whether to display progress bars (default: interactive())}

\item{limit}{Optional limit on number of grid rows to process}

\item{validate}{Validation mode for flexible types: "light" (default) or "full"}
}
\value{
A tibble containing results from all executed stages
}
\description{
Runs all stages in a flow, handling dependencies and parallelization
according to the flow's distribution settings. Returns a tibble with
results from all stages.
}
\examples{
\donttest{
grid <- data.frame(x = 1:3)
fl <- flow(grid) |>
  stage("double", function(x) x * 2, schema = returns(result = dbl()))
results <- collect(fl)
}
}
